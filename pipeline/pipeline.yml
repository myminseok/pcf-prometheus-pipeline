resource_types:
- name: bosh-creds
  type: docker-image
  source:
    repository: mkuratczyk/bosh-creds-resource
    tag: 1.4
- name: bosh-deploy
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: pcf-prometheus-pipeline
  type: git
  source:
    uri: https://github.com/pivotal-cf/pcf-prometheus-pipeline.git
    branch: master
- name: pcf-prometheus-pipeline-myminseok
  type: git
  source:
    uri: https://github.com/myminseok/pcf-prometheus-pipeline.git
    branch: master
- name: prometheus-release-git
  type: git
  source:
    uri: https://github.com/bosh-prometheus/prometheus-boshrelease.git
    branch: master
- name: prometheus-release-blob
  type: github-release
  source:
    user: bosh-prometheus
    repository: prometheus-boshrelease
    access_token: ((github_token))
- name: node-exporter-release
  type: github-release
  source:
    user: bosh-prometheus
    repository: node-exporter-boshrelease
    access_token: ((github_token))
- name: pcf-bosh-creds
  type: bosh-creds
  source:
    pcf_opsman_admin_username: ((pcf_opsman_admin_username))
    pcf_opsman_admin_password: ((pcf_opsman_admin_password))
    opsman_url: ((opsman_url))
    external_bosh_address: ((external_bosh_address))
    external_bosh_client: ((external_bosh_client))
    external_bosh_client_secret: ((external_bosh_client_secret))
    external_bosh_ca_cert: ((external_bosh_ca_cert))
- name: bosh-deployment
  type: bosh-deploy

jobs:
- name: create-uaa-clients
  plan:
  - get: pcf-prometheus-pipeline
  - task: create-uaa-clients
    file: pcf-prometheus-pipeline/pipeline/tasks/create-uaa-clients.yml
    tags: [pcf]
    params:
      opsman_url: ((opsman_url))
      pcf_opsman_admin_username: ((pcf_opsman_admin_username))
      pcf_opsman_admin_password: ((pcf_opsman_admin_password))
      uaa_bosh_exporter_client_secret: ((uaa_bosh_exporter_client_secret))
      uaa_clients_firehose_exporter_secret: ((uaa_clients_firehose_exporter_secret))
      uaa_clients_cf_exporter_secret: ((uaa_clients_cf_exporter_secret))

- name: install-node-exporter
  plan:
  - aggregate:
    - get: node-exporter-release
    - get: pcf-prometheus-pipeline
      passed: [create-uaa-clients]
    - get: pcf-bosh-creds
  - task: install-node-exporter
    file: pcf-prometheus-pipeline/pipeline/tasks/install-node-exporter.yml
    tags: [pcf]

- name: deploy
  plan:
  - get: pcf-prometheus-pipeline-myminseok
  - get: pcf-prometheus-pipeline
    passed: [install-node-exporter]
  - get: prometheus-release-git
  - get: prometheus-release-blob
  - get: pcf-bosh-creds
    params:
      deployment: ((deployment_name))
  - task: retrieve-params-from-opsman
    file: pcf-prometheus-pipeline/pipeline/tasks/retrieve-params-from-opsman.yml
    tags: [pcf]
    params:
      pcf_opsman_admin_username: ((pcf_opsman_admin_username))
      pcf_opsman_admin_password: ((pcf_opsman_admin_password))
      opsman_url: ((opsman_url))
  - task: check-if-migration-required
    file: pcf-prometheus-pipeline/pipeline/tasks/check-if-migration-required.yml
    tags: [pcf]
    params:
      deployment_name: ((deployment_name))
  - put: bosh-deployment
    tags: [pcf]
    params:
      source_file: pcf-bosh-creds/((director_for_deployment)).json
      deployment: ((deployment_name))
      manifest: prometheus-release-git/manifests/prometheus.yml
      releases:
      - prometheus-release-blob/prometheus-*.tgz
      ops_files:
      - migration/*.yml
      - prometheus-release-git/manifests/operators/monitor-bosh.yml
      - prometheus-release-git/manifests/operators/enable-bosh-uaa.yml
      - prometheus-release-git/manifests/operators/monitor-cf.yml
      - prometheus-release-git/manifests/operators/monitor-node.yml
      - prometheus-release-git/manifests/operators/enable-cf-route-registrar.yml
      - pcf-prometheus-pipeline/pcf-cloud-config-ops.yml
      - pcf-prometheus-pipeline/pcf-colocate-firehose_exporter.yml
      - pcf-prometheus-pipeline/pcf-local-cf_exporter.yml
      - pcf-prometheus-pipeline-myminseok/pipeline/grafana-smtp.yml
      vars:
        network: ((deploy_network))
        azs: ((deploy_azs))
        grafana_password: ((grafana_admin_password))
        prometheus_password: ((prometheus_admin_password))
        alertmanager_password: ((alertmanager_password))
        vm_type_micro: ((deploy_vm_type_micro))
        vm_type_small: ((deploy_vm_type_small))
        metrics_environment: ((metrics_environment))
        uaa_clients_cf_exporter_secret: ((uaa_clients_cf_exporter_secret))
        uaa_clients_firehose_exporter_secret: ((uaa_clients_firehose_exporter_secret))
        uaa_bosh_exporter_client_secret: ((uaa_bosh_exporter_client_secret))
        skip_ssl_verify: ((skip_ssl_verify))
        system_domain: ((system_domain))
        cf_deployment_name: ((cf_deployment_name))
        grafana_smtp_enabled: ((grafana_smtp_enabled))
        grafana_smtp_host: ((grafana_smtp_host))
        grafana_smtp_user: ((grafana_smtp_user))
        grafana_smtp_password: ((grafana_smtp_password))
        grafana_smtp_from_address: ((grafana_smtp_from_address))
        grafana_smtp_from_name: ((grafana_smtp_from_name))
      vars_files:
        - pcf-bosh-creds/pcf_bosh_director.yml
        - dynamic-params/params.yml

- name: destroy
  plan:
  - get: pcf-prometheus-pipeline
  - get: pcf-bosh-creds
  - task: delete-deployment
    file: pcf-prometheus-pipeline/pipeline/tasks/delete-prometheus.yml
    tags: [pcf]
    params:
      deployment: ((deployment_name))
      opsman_url: ((opsman_url))
      pcf_opsman_admin_username: ((pcf_opsman_admin_username))
      pcf_opsman_admin_password: ((pcf_opsman_admin_password))
      director_for_deployment: ((director_for_deployment))
